org: clowsss
app: sls-new
service: serverless-shortlinker
frameworkVersion: '3'

custom:
  esbuild:
    exclude: [ ]
  userTableName: 'userTable-${sls:stage}'
  tokenTableName: 'tokenTable-${sls:stage}'
  linkTableName: 'linksTable-${sls:stage}'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  environment:
    DYNAMODB_USER_TABLE: ${self:custom.userTableName}
    DYNAMODB_TOKEN_TABLE: ${self:custom.tokenTableName}
    DYNAMODB_LINK_TABLE: ${self:custom.linkTableName}
    JWT_REFRESH_SECRET: ${env.JWT_REFRESH_SECRET}
    JWT_ACCESS_SECRET: ${env.JWT_ACCESS_SECRET}
  iamRoleStatements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.userTableName}"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.userTableName}/index/*"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tokenTableName}"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tokenTableName}/index/*"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.linkTableName}"
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.linkTableName}/index/*"


functions:
  auth:
    handler: auth/handler.handler
  function1:
    handler: api/src/app.handler
    events:
      - http: ANY /
      - http:
          path: '/user/me'
          method: get
          authorizer: auth
      - http:
          path: '/links'
          method: ANY
          authorizer: auth
      - http: ANY {proxy+}

resources:
  Resources:
    LinkTable:
      Type: AWS::DynamoDB::GlobalTable
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: shortLink
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ShorLinkIndex
            KeySchema:
              - AttributeName: shortLink
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: user_id
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
        Replicas:
          - Region: "eu-central-1"
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.linkTableName}
    TokenTable:
      Type: AWS::DynamoDB::GlobalTable
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        Replicas:
          - Region: 'eu-central-1'
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tokenTableName}
    UserTable:
      Type: AWS::DynamoDB::GlobalTable
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
        Replicas:
          - Region: "eu-central-1"
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.userTableName}
plugins:
  - serverless-esbuild

